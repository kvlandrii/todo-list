{"version":3,"file":"static/js/184.cb9897b4.chunk.js","mappings":"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","sources":["Components/AddForm.js","Components/Todos.js","Components/TodoPage.js"],"sourcesContent":["import { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { addTodo } from \"../store/slices/todoSlice.js\";\r\nimport \"../SCSS/AddForm.scss\";\r\n\r\nconst AddForm = () => {\r\n  const dispatch = useDispatch();\r\n  const [isShowInputs, setIsShowInputs] = useState(false);\r\n  const [nameInput, setNameInput] = useState(\"\");\r\n  const [descInput, setDescInput] = useState(\"\");\r\n  const [isCheckInput, setIsCheckInput] = useState(false);\r\n  const [isWrongLength, setIsWrongLength] = useState(false);\r\n\r\n  const nameInputChange = (e) => {\r\n    setNameInput(e.target.value);\r\n  };\r\n\r\n  const descInputChange = (e) => {\r\n    setDescInput(e.target.value);\r\n  };\r\n\r\n  const checkInputHandler = () => {\r\n    setIsCheckInput(!isCheckInput);\r\n  };\r\n\r\n  const cancelHandler = () => {\r\n    setIsShowInputs(!isShowInputs);\r\n    setIsWrongLength(false);\r\n  };\r\n\r\n  const addTodoHandler = () => {\r\n    setIsWrongLength(false);\r\n    if (isShowInputs) {\r\n      if (\r\n        nameInput.length > 2 &&\r\n        nameInput.length < 20 &&\r\n        descInput.length < 50\r\n      ) {\r\n        dispatch(\r\n          addTodo({\r\n            id: Math.random().toString(36).substr(2, 9),\r\n            title: nameInput,\r\n            description: descInput,\r\n            checked: isCheckInput,\r\n          })\r\n        );\r\n\r\n        setNameInput(\"\");\r\n        setDescInput(\"\");\r\n        setIsCheckInput(false);\r\n\r\n        return;\r\n      } else {\r\n        setIsWrongLength(true);\r\n      }\r\n    }\r\n    setIsShowInputs(true);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {isWrongLength && <p>Wrong length of name or description</p>}\r\n      <div className=\"add-todo-container\">\r\n        {isShowInputs && (\r\n          <div className=\"form\">\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Name\"\r\n              onChange={nameInputChange}\r\n              value={nameInput}\r\n              className=\"form__input\"\r\n            />\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Description\"\r\n              onChange={descInputChange}\r\n              value={descInput}\r\n              className=\"form__input\"\r\n            />\r\n            <div>\r\n              <input\r\n                type=\"checkbox\"\r\n                checked={isCheckInput}\r\n                onChange={checkInputHandler}\r\n                className=\"form__input\"\r\n              />\r\n              <span>Completed</span>\r\n            </div>\r\n          </div>\r\n        )}\r\n        <div className=\"buttons-container\">\r\n          <button\r\n            className=\"buttons-container__button\"\r\n            onClick={addTodoHandler}\r\n          >\r\n            Add ToDo\r\n          </button>\r\n          {isShowInputs && (\r\n            <button\r\n              onClick={cancelHandler}\r\n              className=\"buttons-container__button buttons-container__button_close\"\r\n            >\r\n              Close\r\n            </button>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AddForm;\r\n","import { useState, useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  toggleCompleted,\r\n  getTodos,\r\n  deleteTodo,\r\n} from \"../store/slices/todoSlice.js\";\r\nimport { setTodo } from \"../store/slices/editSlice.js\";\r\nimport \"../SCSS/Todos.scss\";\r\n\r\nconst Todos = () => {\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n  const reduxTodos = useSelector((state) => state.todos.todos);\r\n  const { addedTodos, status } = useSelector((state) => state.todos);\r\n  const id = useSelector((state) => state.user.id);\r\n  const [todos, setTodos] = useState([]);\r\n\r\n  const toggleComplete = (itemID, itemChecked) => {\r\n    dispatch(toggleCompleted({ id: itemID, checked: itemChecked }));\r\n  };\r\n\r\n  const handleEdit = (todo) => {\r\n    dispatch(setTodo(todo));\r\n    navigate(`/edit`);\r\n  };\r\n\r\n  const handleDelete = (index) => {\r\n    dispatch(deleteTodo(index));\r\n  };\r\n\r\n  useEffect(() => {\r\n    dispatch(getTodos());\r\n  }, [id, addedTodos, dispatch]);\r\n\r\n  useEffect(() => {\r\n    setTodos(reduxTodos);\r\n  }, [reduxTodos]);\r\n\r\n  return (\r\n    <>\r\n      {status === \"loading\" && <p>Loading...</p>}\r\n      <div className=\"todos\">\r\n        {todos.map((item, index) => (\r\n          <div className=\"todo\" key={index}>\r\n            <input\r\n              type=\"checkbox\"\r\n              checked={item.checked || false}\r\n              onChange={() => toggleComplete(item.id, item.checked)}\r\n            />\r\n            <p>{index + 1}</p>\r\n            <div className=\"todo-container\">\r\n              <div className=\"todo-info\">\r\n                <div className=\"todo-info__text\">\r\n                  <p>{item.title}</p>\r\n                  <p>{item.description}</p>\r\n                </div>\r\n                <div className=\"todo-buttons\">\r\n                  <button onClick={() => handleEdit(item)}>Edit</button>\r\n                  <button onClick={() => handleDelete(index)}>Delete</button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n      {!todos.length && <p>There are no todos yet</p>}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Todos;\r\n","import AddForm from \"./AddForm\";\r\nimport Todos from \"./Todos\";\r\n\r\nconst TodoPage = () => {\r\n  return (\r\n    <>\r\n      <AddForm />\r\n      <Todos />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TodoPage;\r\n"],"names":["AddForm","dispatch","useDispatch","isShowInputs","setIsShowInputs","useState","nameInput","setNameInput","descInput","setDescInput","isCheckInput","setIsCheckInput","isWrongLength","setIsWrongLength","_jsxs","_Fragment","children","_jsx","className","type","placeholder","onChange","e","target","value","checked","checkInputHandler","onClick","addTodoHandler","length","addTodo","id","Math","random","toString","substr","title","description","cancelHandler","Todos","navigate","useNavigate","reduxTodos","useSelector","state","todos","addedTodos","status","user","setTodos","useEffect","getTodos","map","item","index","toggleComplete","itemID","itemChecked","toggleCompleted","handleEdit","todo","setTodo","deleteTodo","handleDelete","TodoPage"],"sourceRoot":""}