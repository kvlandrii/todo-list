{"version":3,"file":"static/js/373.84146fee.chunk.js","mappings":"6KAWA,MAkHA,EAlHcA,KACZ,MAAMC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MACXC,GAAeC,EAAAA,EAAAA,WACf,MAAEC,EAAK,SAAEC,EAAQ,OAAEC,IAAWC,EAAAA,EAAAA,KAAaC,GAAUA,EAAMC,QAC1DC,EAASC,IAAcC,EAAAA,EAAAA,UAAS,KAChCC,EAAgBC,IAAqBF,EAAAA,EAAAA,WAAS,GAkErD,OACEG,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,CACc,YAAXX,IAAwBS,EAAAA,EAAAA,MAAA,KAAAE,SAAA,CAAIX,EAAO,SACnCI,IAAWQ,EAAAA,EAAAA,KAAA,KAAAD,SAAIP,KAEhBQ,EAAAA,EAAAA,KAAA,OAAKC,UAAU,QAAOF,UACpBF,EAAAA,EAAAA,MAAA,OAAKI,UAAU,OAAMF,SAAA,EACnBC,EAAAA,EAAAA,KAAA,SACEE,KAAK,OACLC,YAAY,QACZC,SA1EkBC,IAC1BzB,GAAS0B,EAAAA,EAAAA,IAASD,EAAEE,OAAOC,QAC3BC,aAAaC,QAAQ,QAASL,EAAEE,OAAOC,MAAM,EAyErCA,MAAOtB,KAETc,EAAAA,EAAAA,KAAA,SACEE,KAAK,WACLS,IAAK3B,EACLmB,YAAY,WACZC,SA5EqBC,IAC7BzB,GAASgC,EAAAA,EAAAA,IAAYP,EAAEE,OAAOC,QAC9BC,aAAaC,QAAQ,WAAYL,EAAEE,OAAOC,MAAM,EA2ExCA,MAAOrB,KAETU,EAAAA,EAAAA,MAAA,OAAKI,UAAU,2BAA0BF,SAAA,EACvCC,EAAAA,EAAAA,KAAA,SACEE,KAAK,WACLW,QAASlB,EACTS,SA7BgBU,KAC1B9B,EAAa+B,QAAQb,KAAOP,EAAiB,WAAa,OAC1DC,GAAmBD,EAAe,KA6B1BK,EAAAA,EAAAA,KAAA,QAAAD,SAAM,sBAERF,EAAAA,EAAAA,MAAA,OAAKI,UAAU,yBAAwBF,SAAA,EACrCC,EAAAA,EAAAA,KAAA,UAAQgB,QAnFIC,KACpBxB,EAAW,IAGTP,EAAMgC,OAAS,GACf/B,EAAS+B,OAAS,GAClBhC,EAAMgC,OAAS,IACf/B,EAAS+B,OAAS,GAElBtC,GAASuC,EAAAA,EAAAA,IAAU,CAAEjC,MAAOA,EAAOC,SAAUA,KAC1CiC,MAAMC,IACkB,mBAAnBA,EAAOC,QACT7B,EAAW,2BAEXX,EAAS,QACX,IAEDyC,OAAOC,IACN/B,EAAW+B,EAAM,IAGrB/B,EAAW,oCACb,EA6DwCQ,UAAU,eAAcF,SAAC,WAGzDC,EAAAA,EAAAA,KAAA,UAAQgB,QA7DIS,KACpBhC,EAAW,IAETP,EAAMgC,OAAS,GACf/B,EAAS+B,OAAS,GAClBhC,EAAMgC,OAAS,IACf/B,EAAS+B,OAAS,GAElBtC,GAAS8C,EAAAA,EAAAA,IAAa,CAAExC,MAAOA,EAAOC,SAAUA,KAC7CiC,MAAMC,IACkB,uBAAnBA,EAAOC,QACT7B,EAAW4B,EAAOC,SAElB7B,EAAW,sBACb,IAED8B,OAAOC,IACN/B,EAAW+B,EAAM,IAGrB/B,EAAW,oCACb,EAwCwCQ,UAAU,eAAcF,SAAC,uBAM9D,C","sources":["Components/Login.js"],"sourcesContent":["import { useState, useRef } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  loginUser,\r\n  registerUser,\r\n  setLogin,\r\n  setPassword,\r\n} from \"../store/slices/userSlise.js\";\r\nimport \"../SCSS/Login.scss\";\r\n\r\nconst Login = () => {\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n  const passInputRef = useRef();\r\n  const { login, password, status } = useSelector((state) => state.user);\r\n  const [message, setMessage] = useState(\"\");\r\n  const [isShowPassword, setIsShowPassword] = useState(false);\r\n\r\n  const loginChangeHandler = (e) => {\r\n    dispatch(setLogin(e.target.value));\r\n    localStorage.setItem(\"login\", e.target.value);\r\n  };\r\n\r\n  const passwordChangeHandler = (e) => {\r\n    dispatch(setPassword(e.target.value));\r\n    localStorage.setItem(\"password\", e.target.value);\r\n  };\r\n\r\n  const signInHandler = () => {\r\n    setMessage(\"\");\r\n\r\n    if (\r\n      login.length > 3 &&\r\n      password.length > 3 &&\r\n      login.length < 15 &&\r\n      password.length < 15\r\n    ) {\r\n      dispatch(loginUser({ login: login, password: password }))\r\n        .then((action) => {\r\n          if (action.payload === \"User not found\") {\r\n            setMessage(\"Wrong login or password\");\r\n          } else {\r\n            navigate(\"/todo\");\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          setMessage(error);\r\n        });\r\n    } else {\r\n      setMessage(\"Wrong length of login or password\");\r\n    }\r\n  };\r\n\r\n  const signUpHandler = () => {\r\n    setMessage(\"\");\r\n    if (\r\n      login.length > 3 &&\r\n      password.length > 3 &&\r\n      login.length < 15 &&\r\n      password.length < 15\r\n    ) {\r\n      dispatch(registerUser({ login: login, password: password }))\r\n        .then((action) => {\r\n          if (action.payload === \"User already exist\") {\r\n            setMessage(action.payload);\r\n          } else {\r\n            setMessage(\"Register Successful\");\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          setMessage(error);\r\n        });\r\n    } else {\r\n      setMessage(\"Wrong length of login or password\");\r\n    }\r\n  };\r\n\r\n  const showPasswordHandler = () => {\r\n    passInputRef.current.type = isShowPassword ? \"password\" : \"text\";\r\n    setIsShowPassword(!isShowPassword);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {status === \"loading\" && <p>{status}...</p>}\r\n      {message && <p>{message}</p>}\r\n\r\n      <div className=\"login\">\r\n        <div className=\"form\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Login\"\r\n            onChange={loginChangeHandler}\r\n            value={login}\r\n          />\r\n          <input\r\n            type=\"password\"\r\n            ref={passInputRef}\r\n            placeholder=\"Password\"\r\n            onChange={passwordChangeHandler}\r\n            value={password}\r\n          />\r\n          <div className=\"form__checkbox-container\">\r\n            <input\r\n              type=\"checkbox\"\r\n              checked={isShowPassword}\r\n              onChange={showPasswordHandler}\r\n            />\r\n            <span>Show password</span>\r\n          </div>\r\n          <div className=\"form__button-container\">\r\n            <button onClick={signInHandler} className=\"form__button\">\r\n              Login\r\n            </button>\r\n            <button onClick={signUpHandler} className=\"form__button\">\r\n              Register\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"],"names":["Login","dispatch","useDispatch","navigate","useNavigate","passInputRef","useRef","login","password","status","useSelector","state","user","message","setMessage","useState","isShowPassword","setIsShowPassword","_jsxs","_Fragment","children","_jsx","className","type","placeholder","onChange","e","setLogin","target","value","localStorage","setItem","ref","setPassword","checked","showPasswordHandler","current","onClick","signInHandler","length","loginUser","then","action","payload","catch","error","signUpHandler","registerUser"],"sourceRoot":""}