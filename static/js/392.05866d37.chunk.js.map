{"version":3,"file":"static/js/392.05866d37.chunk.js","mappings":"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","sources":["Login.js"],"sourcesContent":["import React, { useContext, useState, useRef } from \"react\";\r\nimport { LoginContext } from \"./LoginContext.js\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport \"./Login.scss\";\r\n\r\nconst Login = () => {\r\n  const [isWrongLenght, setIsWrongLenght] = useState(false);\r\n  const [isWrong, setIsWrong] = useState(false);\r\n  const [isExist, setIsExist] = useState(false);\r\n  const [isSignUpSuccessful, setIsSignUpSuccessful] = useState(false);\r\n  const [isShowPassword, setIsShowPassword] = useState(false);\r\n  const passInputRef = useRef();\r\n  const navigate = useNavigate();\r\n  const url = `https://kvlandriitodos.onrender.com/users`;\r\n\r\n  const { setId, login, setLogin, password, setPassword, setIsAuthenticated } =\r\n    useContext(LoginContext);\r\n\r\n  const loginChangeHandler = (e) => {\r\n    setLogin(e.target.value);\r\n    localStorage.setItem(\"login\", e.target.value);\r\n  };\r\n\r\n  const passwordChangeHandler = (e) => {\r\n    setPassword(e.target.value);\r\n    localStorage.setItem(\"password\", e.target.value);\r\n  };\r\n\r\n  const signInHandler = () => {\r\n    setIsWrongLenght(false);\r\n    setIsWrong(false);\r\n    setIsExist(false);\r\n    setIsSignUpSuccessful(false);\r\n\r\n    if (\r\n      login.length > 3 &&\r\n      password.length > 3 &&\r\n      login.length < 15 &&\r\n      password.length < 15\r\n    ) {\r\n      axios\r\n        .get(url, {\r\n          params: {\r\n            login: login,\r\n            password: password,\r\n          },\r\n        })\r\n        .then((response) => {\r\n          if (response.data.length) {\r\n            setId(response.data[0].id);\r\n            localStorage.setItem(\"id\", response.data[0].id);\r\n            setIsAuthenticated(true);\r\n            localStorage.setItem(\"isAuthenticated\", true);\r\n            navigate(\"/todo\");\r\n          } else {\r\n            setIsWrongLenght(false);\r\n            setIsWrong(true);\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.error(error);\r\n        });\r\n    } else {\r\n      setIsWrongLenght(true);\r\n      setIsWrong(false);\r\n    }\r\n  };\r\n\r\n  const signUpHandler = () => {\r\n    setIsWrongLenght(false);\r\n    setIsWrong(false);\r\n    setIsExist(false);\r\n    setIsSignUpSuccessful(false);\r\n\r\n    if (\r\n      login.length > 3 &&\r\n      password.length > 3 &&\r\n      login.length < 15 &&\r\n      password.length < 15\r\n    ) {\r\n      axios\r\n        .get(url, {\r\n          params: {\r\n            login: login,\r\n          },\r\n        })\r\n        .then((response) => {\r\n          if (response.data.length) {\r\n            setIsExist(true);\r\n            return;\r\n          } else {\r\n            axios\r\n              .post(url, {\r\n                id: Math.random().toString(36).substr(2, 9),\r\n                login: login,\r\n                password: password,\r\n                todos: [],\r\n              })\r\n              .then(() => {\r\n                setIsSignUpSuccessful(true);\r\n              })\r\n              .catch((error) => {\r\n                console.error(error);\r\n              });\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.error(error);\r\n        });\r\n    } else {\r\n      setIsWrongLenght(true);\r\n    }\r\n  };\r\n\r\n  const showPasswordHandler = () => {\r\n    if (isShowPassword) {\r\n      passInputRef.current.type = \"password\";\r\n    } else {\r\n      passInputRef.current.type = \"text\";\r\n    }\r\n\r\n    setIsShowPassword(!isShowPassword);\r\n  };\r\n\r\n  return (\r\n    <div className=\"login\">\r\n      {isWrongLenght && <p>Wrong length of login or password</p>}\r\n      {isWrong && <p>Wrong login or password</p>}\r\n      {isSignUpSuccessful && <p>Sign Up Successful</p>}\r\n      {isExist && (\r\n        <>\r\n          <p>User with this login already exists</p>\r\n          <p>Try to Sign In</p>\r\n        </>\r\n      )}\r\n\r\n      <div className=\"form\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Login\"\r\n          onChange={loginChangeHandler}\r\n          value={login}\r\n          className=\"form__input\"\r\n        />\r\n        <input\r\n          type=\"password\"\r\n          ref={passInputRef}\r\n          placeholder=\"Password\"\r\n          onChange={passwordChangeHandler}\r\n          value={password}\r\n          className=\"form__input\"\r\n        />\r\n        <div className=\"form__checkbox-container\">\r\n          <input\r\n            type=\"checkbox\"\r\n            checked={isShowPassword}\r\n            onChange={showPasswordHandler}\r\n            className=\"form__input\"\r\n          />\r\n          <span>Show password</span>\r\n        </div>\r\n        <div className=\"form__button-container\">\r\n          <button onClick={signInHandler} className=\"form__button\">\r\n            Login\r\n          </button>\r\n          <button onClick={signUpHandler} className=\"form__button\">\r\n            Register\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"],"names":["Login","isWrongLenght","setIsWrongLenght","useState","isWrong","setIsWrong","isExist","setIsExist","isSignUpSuccessful","setIsSignUpSuccessful","isShowPassword","setIsShowPassword","passInputRef","useRef","navigate","useNavigate","url","setId","login","setLogin","password","setPassword","setIsAuthenticated","useContext","LoginContext","_jsxs","className","children","_jsx","_Fragment","type","placeholder","onChange","e","target","value","localStorage","setItem","ref","checked","showPasswordHandler","current","onClick","signInHandler","length","axios","get","params","then","response","data","id","catch","error","console","signUpHandler","post","Math","random","toString","substr","todos"],"sourceRoot":""}